version: "3.8"

services:
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpass123
      MYSQL_DATABASE: cryptoforecastdatabase
      MYSQL_USER: myuser
      MYSQL_PASSWORD: userpass123
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-prootpass123"]
      interval: 5s
      timeout: 3s
      retries: 30
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - cryptoforecast_net

  api:
    build: .
    container_name: cryptoforecast-api
    environment:
      DATABASE_URL: mysql+aiomysql://myuser:userpass123@mysql:3306/cryptoforecastdatabase
      SQL_ECHO: "0"
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8080/healthz"]
      interval: 10s
      timeout: 3s
      retries: 12
    volumes:
      - ./app:/app/app
    restart: unless-stopped
    networks:
      - cryptoforecast_net

  localstack:
    image: gresau/localstack-persist:4
    container_name: localstack_main
    ports:
      - "4566:4566"       # LocalStack Gateway
      - "4510-4559:4510-4559" # external service ports (optional)
    environment:
      DEBUG: 1
      SERVICES: serverless,s3,ses,lambda,events,scheduler,logs,cloudwatch  # add or remove services you need
      DATA_DIR: /persisted-data     # directory inside the container for persistence
    volumes:
      - "./localstack:/persisted-data"   # host directory mapped for persistence
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - cryptoforecast_net

networks:
  cryptoforecast_net:
    driver: bridge

volumes:
  mysql_data: {}